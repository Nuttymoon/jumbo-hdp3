---
- name: Add the KERBEROS service to cluster
  uri:
    url: "{{ ambari_url }}/api/v1/clusters/{{ cluster_name }}/services/KERBEROS"
    headers:
      X-Requested-By: ambari
    method: POST
    force_basic_auth: yes
    user: "{{ AMBARI.user }}"
    password: "{{ AMBARI.pwd }}"
    body_format: json
    return_content: yes
    validate_certs: no
    status_code: 200, 201, 202, 409
  register: krb_service_added

- name: Add the KERBEROS_CLIENT compoent to the KERBEROS service
  uri:
    url: "{{ ambari_url }}/api/v1/clusters/{{ cluster_name }}/services/KERBEROS/components/KERBEROS_CLIENT"
    headers:
      X-Requested-By: ambari
    method: POST
    force_basic_auth: yes
    user: "{{ AMBARI.user }}"
    password: "{{ AMBARI.pwd }}"
    body_format: json
    return_content: yes
    validate_certs: no
    status_code: 200, 201, 202, 409
  register: cmd_service_krb_client
  changed_when: cmd_service_krb_client.status != 409

# - name: upload krb5.conf
#   uri:
#     url: "{{ ambari_url }}/api/v1/clusters/{{ cluster_name }}"
#     headers:
#       X-Requested-By: ambari
#     method: PUT
#     force_basic_auth: yes
#     user: "{{ AMBARI.user }}"
#     password: "{{ AMBARI.pwd }}"
#     body: " {{ lookup('file', 'krb5-conf.json') }}"
#     validate_certs: no
#     status_code: 200, 201, 202, 409
#   register: cmd_krb_conf
#   changed_when: cmd_krb_conf.status != 409
#
# TODO Fix with URI module (not working)
- name: Template krb5.conf
  template:
    src: krb5-conf.j2
    dest: /tmp/krb5_conf_ambari_api.json

- name: upload krb5.conf
  command: "curl -u admin:admin -i -k -H 'X-Requested-By: ambari' -X PUT -d @/tmp/krb5_conf_ambari_api.json {{ ambari_url }}/api/v1/clusters/{{ cluster_name }}"
  register: cmd_krb_conf
  failed_when:
    - "'409' not in cmd_krb_conf.stdout"
    - "'200' not in cmd_krb_conf.stdout"
    - "'201' not in cmd_krb_conf.stdout"
    - "'202' not in cmd_krb_conf.stdout"
  changed_when: "'409' not in cmd_krb_conf.stdout"


- name: Add the KERBEROS_CLIENT componant to each host
  uri:
    url: "{{ ambari_url }}/api/v1/clusters/{{ cluster_name }}/hosts?Hosts/host_name={{ item }}"
    headers:
      X-Requested-By: ambari
    method: POST
    body: ' {"host_components" : [{"HostRoles" : {"component_name":"KERBEROS_CLIENT"}}]}' 
    force_basic_auth: yes
    user: "{{ AMBARI.user }}"
    password: "{{ AMBARI.pwd }}"
    return_content: yes
    validate_certs: no
    status_code: 200, 201, 202, 409
  register: cmd_krb_client
  changed_when: cmd_krb_client.status != 409
  with_inventory_hostnames:
    - all

- name: Install Kerberos service and components
  uri:
    url: "{{ ambari_url }}/api/v1/clusters/{{ cluster_name }}/services/KERBEROS"
    headers:
      X-Requested-By: ambari
    method: PUT
    body: ' {"RequestInfo":{"context":"Install Kerberos"},"Body":{"ServiceInfo": {"state" : "INSTALLED"}}}' 
    force_basic_auth: yes
    user: "{{ AMBARI.user }}"
    password: "{{ AMBARI.pwd }}"
    return_content: yes
    validate_certs: no
    status_code: 200, 201, 202, 409
  register: cmd_krb_install
  changed_when: cmd_krb_install.status != 409

- name: Stop all services
  uri:
    url: "{{ ambari_url }}/api/v1/clusters/{{ cluster_name }}/services"
    headers:
      X-Requested-By: ambari
    method: PUT
    force_basic_auth: yes
    user: "{{ AMBARI.user }}"
    password: "{{ AMBARI.pwd }}"
    body: ' {"RequestInfo":{"context":"Stop all services"},"Body":{"ServiceInfo":{"state":"INSTALLED"}}}'
    status_code: 200, 201, 202, 409
  register: cmd_stop_services
  changed_when: cmd_stop_services.status == 202

- name: Wait for services to stop
  uri:
    url: "{{ ambari_url }}/api/v1/clusters/{{ cluster_name }}/requests/{{ cmd_stop_services.json.Requests.id }}"
    headers:
      X-Requested-By: ambari
    method: GET
    force_basic_auth: yes
    user: "{{ AMBARI.user }}"
    password: "{{ AMBARI.pwd }}"
    status_code: 200, 201, 202
  register: progress
  until: "progress.json.Requests.progress_percent == 100.0"
  retries: 720
  delay: 10
  when: cmd_stop_services.status == 202

- name: Reset KDC admin credentials
  uri:
    url: "{{ ambari_url }}/api/v1/clusters/{{ cluster_name }}/credentials/kdc.admin.credential"
    headers:
      X-Requested-By: ambari
    method: DELETE
    force_basic_auth: yes
    user: "{{ AMBARI.user }}"
    password: "{{ AMBARI.pwd }}"
    body_format: json
    return_content: yes
    validate_certs: no
    status_code: 200, 201, 202, 409

- name: Create credential file
  become: false
  template:
    src: credentials.j2
    dest: /tmp/credentials.json
  
- name: Fetch credential file
  fetch:
    src: /tmp/credentials.json
    dest: /tmp/credentials.json
    flat: yes

- name: Set KDC admin credentials
  uri:
    url: "{{ ambari_url }}/api/v1/clusters/{{ cluster_name }}/credentials/kdc.admin.credential"
    headers:
      X-Requested-By: ambari
    method: POST
    body: " {{ lookup('file', '/tmp/credentials.json') }}"
    force_basic_auth: yes
    user: "{{ AMBARI.user }}"
    password: "{{ AMBARI.pwd }}"
    return_content: yes
    validate_certs: no
    status_code: 200, 201, 202, 409
  register: cmd_credentials
  changed_when: cmd_credentials.status != 409

- name: Set custom kerberos descriptor (removes principal suffix)
  uri:
    url: "{{ ambari_url }}/api/v1/clusters/{{ cluster_name }}/artifacts/kerberos_descriptor"
    headers:
      X-Requested-By: ambari
    method: POST
    body: " {{ lookup('file', 'kerberos_descriptor.json') }}"
    force_basic_auth: yes
    user: "{{ AMBARI.user }}"
    password: "{{ AMBARI.pwd }}"
    return_content: yes
    validate_certs: no
    status_code: 200, 201, 202, 409

# Enable Kerberos
- name: Enable Kerberos
  uri:
    url: "{{ ambari_url }}/api/v1/clusters/{{ cluster_name }}/"
    headers:
      X-Requested-By: ambari
    method: PUT
    body: " {{ lookup('file', 'enable-krb.json') }}"
    force_basic_auth: yes
    user: "{{ AMBARI.user }}"
    password: "{{ AMBARI.pwd }}"
    status_code: 200, 201, 202, 409
  register: cmd_enable_krb
  changed_when: cmd_enable_krb.status != 409
