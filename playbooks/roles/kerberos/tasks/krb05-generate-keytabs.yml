---
- name: Download Kerberos requirements CVS file
  uri:
    url: "{{ ambari_url }}/api/v1/clusters/{{ cluster_name }}/kerberos_identities?fields=*&format=CSV" 
    dest: /tmp/kerberos.csv
    headers:
      X-Requested-By: ambari
    method: GET
    force_basic_auth: yes
    user: "{{ AMBARI.user }}"
    password: "{{ AMBARI.pwd }}"
    body_format: json
    return_content: yes
    validate_certs: no
    status_code: 200, 201, 202, 404

- name: Create keytabs folder
  file:
    path: /tmp/keytabs
    state: directory
    mode: 0755

- name: Create keytabs generation script
  shell: |
    awk -F"," \
    '{if (NR!=1 && $2!="ambari-server") {split($6, k, "/"); print "ipa-getkeytab -s '{{ groups['ipaserver'][0] }}.{{ domain }}' -p "$3" -k /tmp/keytabs/"k[5]"; chmod 0666 /tmp/keytabs/"k[5]""}}' \
    /tmp/kerberos.csv > /tmp/gen_keytabs.sh

- name: Kinit admin
  shell: echo {{ FREEIPA.admin_password }} | kinit admin@{{ realm }}

- name: Run keytabs generation script
  shell: sh /tmp/gen_keytabs.sh
  ignore_errors: yes

- name: Set "default_ccache_name" 
  ini_file:
    path: /etc/krb5.conf 
    section: libdefaults 
    option: default_ccache_name 
    value: FILE:/tmp/krb5cc_%{uid}

- name: Fetch krb5.conf
  fetch:
    src: /etc/krb5.conf
    dest: /tmp/krb5.conf
    flat: yes

- name: List keytabs to fetch
  shell: cd /tmp/keytabs && find . -maxdepth 1 -type f | cut -d '/' -f2
  register: keytabs_to_copy

- name: Fetch keytabs
  fetch:
    src: /tmp/keytabs/{{ item }}
    dest: /tmp/keytabs/
    flat: yes
  with_items: "{{ keytabs_to_copy.stdout_lines }}"

- name: Download Kerberos identities requirements
  uri:
    url: "{{ ambari_url }}/api/v1/clusters/{{ cluster_name }}/kerberos_identities?fields=*"
    dest: /tmp/kerberos_identities.json
    headers:
      X-Requested-By: ambari
    method: GET
    force_basic_auth: yes
    user: "{{ AMBARI.user }}"
    password: "{{ AMBARI.pwd }}"
    body_format: json
    return_content: yes
    validate_certs: no
    status_code: 200, 201, 202, 409

- name: Fetch Kerberos identities 
  fetch:
    src: /tmp/kerberos_identities.json
    dest: /tmp/kerberos_identities.json
    flat: yes


